h1. OpenStack Java SDK

Release 1.0-RC3 is compatible with Essex and Folsom.

h2. Maven

|groupId|artifactId|version|
|org.openstack|openstack-java-sdk|1.0-RC3|

https://raw.github.com/woorea/maven/master/releases/

h2. Configuration

You can configure the client in a properties file

h3. openstack.properties

<pre>
verbose=true

#for HPCloud
#auth.credentials=apiAccessKeyCredentials
#auth.accessKey=<your accessKey>
#auth.secretKey=<your secretKey>
#auth.tenantId=<your tenantId>

auth.credentials=passwordCredentials
auth.username=demo
auth.password=secret0
#auth.tenantId=123456789
auth.tenantName=demo


identity.endpoint.publicURL=http://192.168.1.43:5000/v2.0
identity.endpoint.internalURL=http://192.168.1.43:5000/v2.0
identity.endpoint.adminURL=http://192.168.1.43:35357/v2.0
identity.admin.token=secret0

test.glance=false
test.swift=false
</pre>

h2. Example

h3. Identity API (keystone)

h4. Access

<pre>
// X-Auth-Token
OpenStackClient openstack = OpenStackClient.authenticate(properties);

IdentityAdministrationEndpoint identity = openstack.getIdentityAdministationEndpoint();
</pre>

h4. Tenants

<pre>
//GET tenants available
TenantList tenants = identity.tenants().get();

//POST tenant
KeystoneTenant kst = new KeystoneTenant();
kst.setName("test");
kst.setDescription("desc");
kst.setEnabled(true);
Tenant tenant = identity.tenants().post(kst);

//GET tenant
tenant = identity.tenants().tenant(tenant.getId()).get();

//DELETE tenant
identity.tenants().tenant(tenant.getId()).delete();
</pre>

h4. Users

<pre>
UserList users = identity.users().get();

KeystoneUser ksu = new KeystoneUser();
ksu.setName("test");
ksu.setPassword("secret0");
ksu.setEmail("test@test.com");
ksu.setEnabled(true);
User user = identity.users().post(ksu);

user = identity.users().user(user.getId()).get();

identity.users().user(user.getId()).delete();
</pre>

h4. Roles

<pre>
RoleList roles = identity.roles().get();

KeystoneRole ksr = new KeystoneRole();
ksr.setName("test");
Role role = identity.roles().post(ksr);

role = identity.roles().role(role.getId()).get();

identity.roles().role(role.getId()).delete();
</pre>

h4. Services

<pre>
ServiceList services = identity.services().get();

KeystoneService kss = new KeystoneService();
kss.setName("test");
kss.setType("compute");
kss.setDescription("Nova 3.0");
Service service = identity.services().post(kss);

service = identity.services().service(service.getId()).get();

identity.services().service(service.getId()).delete();
</pre>

h4. Endpoints (Not implemented yet)

<pre>
501 HTTP Error from Keystone Server API
</pre>

h3. Compute API (nova)

h4. Select a Tenant

<pre>
// Authenticate on admin tenant
openstack = openstack.reauthenticateOnTenant("admin");
TenantResource compute = openstack.getComputeEndpoint();
</pre>

h4. Servers

<pre>
ServerList servers = compute.servers().get();
</pre>

h5. Server Actions

<pre>
TODO
</pre>

h4. Images

<pre>
ImageList images = compute.images().get();
</pre>

h4. Flavors

<pre>
FlavorList flavors = compute.flavors().get();
</pre>

h4. Key Pairs

<pre>
KeyPairList keypairs = compute.keyPairs().get();
</pre>

h4. Security Groups

<pre>
SecurityGroupList securityGroups = compute.securityGroups().get();
</pre>

h4. Volumes

<pre>
VolumeList volumes = compute.volumes().get();
</pre>

h3. Image Store (glance)

<pre>
org.openstack.model.images.ImageList gImages = openstack.getImagesEndpoint().get();
</pre>

h3. Object Store (swift)

<pre>
List<StorageContainer> sAccount = openstack.getStorageEndpoint().get();
</pre>

h1. Maven

We use maven to build the project. Some helpful maven commands:

@mvn eclipse:eclipse@ _Create the eclipse projects_
@mvn install@ _Builds everything, runs unit & integration tests, installs into your maven repo_
@mvn install -Dmaven.test.skip=true@ _As above, but without running tests_

h1. License

<pre>
This software is licensed under the Apache 2 license, quoted below.

Copyright 2012 Luis Gervaso and OpenStack Java SDK
Copyright 2012 Justin Santa Barbara

Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
</pre>
